# Задача 3.1.
# Создайте класс матрицы (или таблицы).
# Требования к классу:
#   - каждая колонка является числом от 1 до n (n любое число, которые вы поставите!)
#   - в каждой ячейке содержится либо число, либо None
#   - доступы следующие методы матрицы:
#       * принимать новые значения, 
#       * заменять существующие значения, 
#       * выводить число строк и колонок.
class Matrix():
    def __init__(self, n=3, m=3, filler=0):
        self.matrix = [[filler for _ in range(n)]for _ in range(m)]
        self.n = n
        self.m = m
        self.filler = filler

    def __str__(self):
        return "\n".join(list(str(i) for i in self.matrix))

    def change_elem(self,m,n,el):
        self.matrix[m][n] = el

    def change_filler(self, f):
        self.matrix = [[f for _ in range(self.n)]for _ in range(self.m)]


a = Matrix(filler=3, n=5,m=5)
print(a)
print()
a.change_elem(1,1,0)
print(a)
print()
print(f"{a.n=} {a.m=} {a.filler=}")
a.change_filler(7)
print(a)
# Пример матрицы 10 на 10 из единиц:
# [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]

# Примечание! 
#   - новый класс не запрещено строить на базе существующих типов данных: списков, словарей и тд.
#   - отображать в таблице/матрице название колонки не обязательно!
#   - проявите фантазию :)

